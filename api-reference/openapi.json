{
  "openapi": "3.0.2",
  "info": {
    "title": "PLATFORM API V1",
    "version": "1.0.0",
    "contact": {
      "name": "BSPK API Support",
      "email": "bspk-support@bspk.com"
    },
    "description": "\n# Introduction\n\nThe BSPK RESTful JSON API gives you access to your company's BSPK data.\nFor all BSPK API related questions please email: *bspk-support@bspk.com*\n\n\n### Authentication\n\nBSPK uses Token-Based API Authentication. API keys can be managed from the API Keys section in your admin interface. All unauthenticated requests will return an HTTP 401 response.\n\n**Important:**  Developers with BSPK API keys will be granted full access to the data in each endpoint. Access to this data is binary: everything or nothing.\n\n**Authorization header**\nYour  `Authorization`  header should be in the following format:\n```\nAuthorization: Bearer [API_KEY]\n```\n\n### Throttling\n\nAPI requests are limited to the amount specified in the returned `X-RateLimit-Limit` header (per 10 seconds). Exceeding that limit will cause BSPK to return an `HTTP 429` response. Check the `X-RateLimit-Limit` and `X-RateLimit-Remaining` headers to see how many more requests you are allowed until throttling kicks in.\n\n\n### Error Codes\n\n- 400 - Bad Request.\n- 401 - Unauthorized – Invalid BSPK API key.\n- 404 - Not Found – Resource not found.\n- 422 - Unprocessable entity.\n- 429 - Throttle Limit reached.\n- 500 - BSPK Internal Server Error\n\n### Validation\n\nMethods that take input will validate all parameters. Any parameter that fails validation will trigger an error response with status HTTP 422. The response body will be a JSON object like the example below which includes a list of fields that failed validation.\n\n`{'errors':[{'title': 'No clients found with IDs: [NON_EXISTING_ID, OTHER_NON_EXISTING_ID]','code':'not_found'}]}`\n\n\n### Additional Information\n\n- Fields without a value will return null\n- Timestamps are rendered in ISO-8601 format (e.g. 2018-07-21T17:32:28Z)\n- BSPK reserves the right to add more properties to objects, but will never change or remove them. Any breaking changes will result in a major API version update.\n     "
  },
  "servers": [
    {
      "url": "https://api.bspk.com",
      "description": "Production Server"
    },
    {
      "url": "https://api-dev2.bspk.com",
      "description": "Dev Server"
    }
  ],
  "paths": {
    "/api/platform/v1/clients/{id}/external_link": {
      "post": {
        "summary": "Links a BSPK Client with a Client in an external backend system",
        "tags": [
          "Clients"
        ],
        "description": "Links a BSPK Client with a client present at your backend system like an ERP.",
        "operationId": "clientExternalLink",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "BSPK's unique identifier of the client.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "422": {
            "description": "Client is already linked with an external entity"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string",
                    "description": "Client's unique identifier provided by your backend system.",
                    "example": "CLI-789"
                  }
                },
                "required": [
                  "external_id"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Removes the Link from a BSPK Client with a Client in an external backend system",
        "tags": [
          "Clients"
        ],
        "description": "Removes the Link from BSPK Client with a client present at your backend system like an ERP.",
        "operationId": "clientRemoveExternalLink",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "BSPK's unique identifier of the client.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          }
        }
      }
    },
    "/api/platform/v1/clients/{id}/merges": {
      "post": {
        "summary": "Merges a Client to another Client",
        "tags": [
          "Clients"
        ],
        "description": "Merges a BSPK Client with another Client.",
        "operationId": "mergeClient",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "BSPK's unique identifier of the client.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "422": {
            "description": "Client is already linked with an external entity"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client": {
                    "type": "object",
                    "properties": {
                      "shopper_ref": {
                        "type": "string",
                        "description": "Client's unique identifier provided by your backend system.",
                        "example": "CLI-789"
                      },
                      "first_name": {
                        "type": "string",
                        "description": "Client's first name.",
                        "example": "John"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Client's last name.",
                        "example": "Meyer"
                      },
                      "alternate_first_name": {
                        "type": "string",
                        "description": "Client's alternate first name.",
                        "example": "Johnny"
                      },
                      "alternate_last_name": {
                        "type": "string",
                        "description": "Client's alternate last name.",
                        "example": "Meyers"
                      },
                      "gender": {
                        "type": "string",
                        "description": "Gender of the client, being: M = Male, F = Female, NB = Non-binary",
                        "example": "M"
                      },
                      "email": {
                        "type": "string",
                        "description": "Client's email",
                        "example": "client1@email.com"
                      },
                      "mobile_phone": {
                        "type": "string",
                        "description": "Client's mobile phone (with country code)",
                        "example": "+5511987669944"
                      },
                      "other_phone": {
                        "type": "string",
                        "description": "Client's other phone (with country code)",
                        "example": "+551154772457"
                      },
                      "address": {
                        "type": "string",
                        "description": "Client's address",
                        "example": "Av. Paulista, 1000"
                      },
                      "address_2": {
                        "type": "string",
                        "description": "Client's address 2nd line",
                        "example": "10th floor"
                      },
                      "address_3": {
                        "type": "string",
                        "description": "Client's address 3rd line",
                        "example": "Suite 100"
                      },
                      "address_4": {
                        "type": "string",
                        "description": "Client's address 4th line",
                        "example": "Building 1"
                      },
                      "city": {
                        "type": "string",
                        "description": "Client's city",
                        "example": "New York"
                      },
                      "state": {
                        "type": "string",
                        "description": "Client's state",
                        "example": "NY"
                      },
                      "zip_code": {
                        "type": "string",
                        "description": "Client's zip code",
                        "example": "10001"
                      },
                      "country_code": {
                        "type": "string",
                        "description": "Client's country code",
                        "example": "US"
                      },
                      "segment": {
                        "type": "string",
                        "description": "Client's segment",
                        "example": "VIP"
                      },
                      "preferred_contact_channel": {
                        "type": "string",
                        "description": "Valid entries are chat, email, line, whatsapp, wechat, call",
                        "example": "whatsapp"
                      },
                      "nationality": {
                        "type": "string",
                        "description": "Client's Nationality",
                        "example": "US"
                      },
                      "passport_number": {
                        "type": "string",
                        "description": "Client's Passport Number",
                        "example": "AA0199929992"
                      },
                      "languages": {
                        "type": "string",
                        "description": "Client's languages",
                        "example": "en;fr"
                      },
                      "email_contact": {
                        "type": "string",
                        "description": "Define if client gave their aggreement to be contacted by email",
                        "example": "true"
                      },
                      "phone_call_contact": {
                        "type": "string",
                        "description": "Define if client gave their aggreement to be contacted by phone call",
                        "example": "false"
                      },
                      "chat_contact": {
                        "type": "string",
                        "description": "Define if client gave their aggreement to be contacted by chat",
                        "example": "false"
                      },
                      "interested_in_new_products": {
                        "type": "string",
                        "description": "Define if client is interested in receiving messages about new products",
                        "example": "true"
                      },
                      "birthday": {
                        "type": "string",
                        "description": "Client's birth day, full or partial (YYYY-MM-DD or MM-DD)",
                        "example": "1982-02-22"
                      },
                      "creation_date": {
                        "type": "string",
                        "description": "Client's creation date",
                        "example": "01/05/2022"
                      },
                      "store_ref": {
                        "type": "string",
                        "description": "Client's record was created at this store",
                        "example": "22"
                      },
                      "sales_associate_ref": {
                        "type": "string",
                        "description": "Client's current associate",
                        "example": "1101"
                      },
                      "preferences": {
                        "type": "string",
                        "description": "Client's preferred product categories. Must belong to the company “shopper preferences”",
                        "example": "Young Professional; Lawyer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/platform/v1/clients": {
      "post": {
        "summary": "Creates or updates a Client (Shopper) in BSPK",
        "tags": [
          "Clients"
        ],
        "description": "Creates or updates a Shopper in BSPK",
        "operationId": "clientCreate",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response on update"
          },
          "422": {
            "description": "Missing required fields"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client": {
                    "type": "object",
                    "properties": {
                      "shopper_ref": {
                        "type": "string",
                        "description": "Client's unique identifier provided by your backend system.",
                        "example": "CLI-789"
                      },
                      "first_name": {
                        "type": "string",
                        "description": "Client's first name.",
                        "example": "John"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Client's last name.",
                        "example": "Meyer"
                      },
                      "alternate_first_name": {
                        "type": "string",
                        "description": "Client's alternate first name.",
                        "example": "Johnny"
                      },
                      "alternate_last_name": {
                        "type": "string",
                        "description": "Client's alternate last name.",
                        "example": "Meyers"
                      },
                      "gender": {
                        "type": "string",
                        "description": "Gender of the client, being: M = Male or F = Female",
                        "example": "M"
                      },
                      "email": {
                        "type": "string",
                        "description": "Client's email",
                        "example": "client1@email.com"
                      },
                      "mobile_phone": {
                        "type": "string",
                        "description": "Client's mobile phone (with country code)",
                        "example": "+5511987669944"
                      },
                      "other_phone": {
                        "type": "string",
                        "description": "Client's other phone (with country code)",
                        "example": "+551154772457"
                      },
                      "address": {
                        "type": "string",
                        "description": "Client's address",
                        "example": "Av. Paulista, 1000"
                      },
                      "address_2": {
                        "type": "string",
                        "description": "Client's address 2nd line",
                        "example": "10th floor"
                      },
                      "address_3": {
                        "type": "string",
                        "description": "Client's address 3rd line",
                        "example": "Suite 100"
                      },
                      "address_4": {
                        "type": "string",
                        "description": "Client's address 4th line",
                        "example": "Building 1"
                      },
                      "city": {
                        "type": "string",
                        "description": "Client's city",
                        "example": "New York"
                      },
                      "state": {
                        "type": "string",
                        "description": "Client's state",
                        "example": "NY"
                      },
                      "zip_code": {
                        "type": "string",
                        "description": "Client's zip code",
                        "example": "10001"
                      },
                      "country_code": {
                        "type": "string",
                        "description": "Client's country code",
                        "example": "US"
                      },
                      "segment": {
                        "type": "string",
                        "description": "Client's segment",
                        "example": "VIP"
                      },
                      "preferred_contact_channel": {
                        "type": "string",
                        "description": "Valid entries are chat, email, line, whatsapp, wechat, call",
                        "example": "whatsapp"
                      },
                      "nationality": {
                        "type": "string",
                        "description": "Client's Nationality",
                        "example": "US"
                      },
                      "passport_number": {
                        "type": "string",
                        "description": "Client's Passport Number",
                        "example": "AA0199929992"
                      },
                      "languages": {
                        "type": "string",
                        "description": "Client's languages",
                        "example": "en;fr"
                      },
                      "email_contact": {
                        "type": "string",
                        "description": "Define if client gave their aggreement to be contacted by email",
                        "example": "true"
                      },
                      "phone_call_contact": {
                        "type": "string",
                        "description": "Define if client gave their aggreement to be contacted by phone call",
                        "example": "false"
                      },
                      "chat_contact": {
                        "type": "string",
                        "description": "Define if client gave their aggreement to be contacted by chat",
                        "example": "false"
                      },
                      "interested_in_new_products": {
                        "type": "string",
                        "description": "Define if client is interested in receiving messages about new products",
                        "example": "true"
                      },
                      "birthday": {
                        "type": "string",
                        "description": "Client's birth day, full or partial (YYYY-MM-DD or MM-DD)",
                        "example": "1982-02-22"
                      },
                      "creation_date": {
                        "type": "string",
                        "description": "Client's creation date",
                        "example": "01/05/2022"
                      },
                      "store_ref": {
                        "type": "string",
                        "description": "Client's record was created at this store",
                        "example": "22"
                      },
                      "sales_associate_ref": {
                        "type": "string",
                        "description": "Client's current associate",
                        "example": "1101"
                      },
                      "preferences": {
                        "type": "string",
                        "description": "Client's preferred product categories. Must belong to the company “shopper preferences”",
                        "example": "Young Professional; Lawyer"
                      },
                      "ignore_columns": {
                        "type": "string",
                        "description": "Attributes to be ignored during while saving the record (BSPK will not override values for the specified attributes).",
                        "example": "first_name;last_name"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/platform/v1/sales": {
      "post": {
        "summary": "Creates or updates a Sale in BSPK",
        "tags": [
          "Sales"
        ],
        "description": "Creates or updates a Sale in BSPK",
        "operationId": "saleCreateOrUpdate",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful update"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sale": {
                    "type": "object",
                    "properties": {
                      "sale_ref": {
                        "type": "string",
                        "description": "Purchase's unique identifier provided by your backend system.",
                        "example": "SALE-789"
                      },
                      "shopper_ref": {
                        "type": "string",
                        "description": "Shopper's unique identifier provided by your backend system.",
                        "example": "CLI-789"
                      },
                      "store_ref": {
                        "type": "string",
                        "description": "Store's unique identifier provided by your backend system.",
                        "example": "STR-789"
                      },
                      "sales_associate_ref": {
                        "type": "string",
                        "description": "Sales Associate's unique identifier provided by your backend system.",
                        "example": "SA-789"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "Date-time the purchase was created.",
                        "example": "2023-04-23T18:25:43.511"
                      },
                      "currency_code": {
                        "type": "string",
                        "description": "Currency code",
                        "example": "USD"
                      },
                      "line_items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "product_ref": {
                              "type": "string",
                              "description": "Product's unique identifier provided by your backend system.",
                              "example": "PROD-789"
                            },
                            "sku": {
                              "type": "string",
                              "description": "Product's SKU.",
                              "example": "SKU12345"
                            },
                            "quantity": {
                              "type": "string",
                              "description": "Quantity of the product.",
                              "example": "2"
                            },
                            "price": {
                              "type": "string",
                              "description": "Price of the product.",
                              "example": "300"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/platform/v1/webhook_endpoints": {
      "get": {
        "summary": "List Webhook Endpoints",
        "tags": [
          "Webhooks"
        ],
        "description": "List webhook endpoints.",
        "operationId": "listWebhookEndpoints",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response, returns array of webhook endpoints",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 2,
                    "target_url": "https://taget_url.com/endpoint/to/hit_2",
                    "events": [
                      "client.created",
                      "client.updated",
                      "client.deleted"
                    ],
                    "is_enabled": true,
                    "created_at": "2024-08-07T12:29:11.915Z",
                    "updated_at": "2024-08-07T12:29:11.915Z"
                  },
                  {
                    "id": 1,
                    "target_url": "https://taget_url.com/endpoint/to/hit_1",
                    "events": [
                      "client.created",
                      "client.updated",
                      "client.deleted"
                    ],
                    "is_enabled": true,
                    "created_at": "2024-08-07T12:29:11.910Z",
                    "updated_at": "2024-08-07T12:29:11.910Z"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/webhook_endpoints"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a webhook endpoint",
        "tags": [
          "Webhooks"
        ],
        "description": "Creates a webhook endpoint.",
        "operationId": "createWebhookEndpoint",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful response, returns object",
            "content": {
              "application/json": {
                "example": {
                  "id": 5,
                  "target_url": "https://mycompany.com/incoming_webhooks/clients",
                  "events": [
                    "client.created",
                    "client.updated",
                    "client.deleted"
                  ],
                  "is_enabled": true,
                  "created_at": "2024-08-07T12:29:12.016Z",
                  "updated_at": "2024-08-07T12:29:12.016Z",
                  "secret": "ff4e0df0d972783ef4c2b0ecbbb2bb73"
                },
                "schema": {
                  "$ref": "#/components/schemas/webhook_endpoint"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "target_url": {
                    "type": "string",
                    "example": "https://mycompany.com/incoming_webhooks/clients"
                  },
                  "is_enabled": {
                    "type": "boolean",
                    "description": "When not specified it defaults to `true` thus enabling the endpoint."
                  },
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "client.created",
                      "client.updated",
                      "client.deleted",
                      "file_import.finished"
                    ]
                  }
                },
                "required": [
                  "target_url",
                  "events",
                  "is_enabled"
                ]
              }
            }
          }
        }
      }
    },
    "/api/platform/v1/webhook_endpoints/{id}": {
      "patch": {
        "summary": "Updates a webhook endpoint",
        "tags": [
          "Webhooks"
        ],
        "description": "Updates a webhook endpoint.",
        "operationId": "updateWebhookEndpoint",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Webhook endpoint id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response, returns object",
            "content": {
              "application/json": {
                "example": {
                  "id": 6,
                  "target_url": "https://taget_url.com/endpoint/to/hit_5",
                  "events": [
                    "client.created"
                  ],
                  "is_enabled": false,
                  "created_at": "2024-08-07T12:29:12.038Z",
                  "updated_at": "2024-08-07T12:29:12.076Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/webhook_endpoint"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "target_url": {
                    "type": "string",
                    "example": "https://mycompany.com/incoming_webhooks/clients"
                  },
                  "is_enabled": {
                    "type": "boolean",
                    "example": false,
                    "description": "When not specified it defaults to `true` thus enabling the endpoint."
                  },
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "client.created",
                      "client.updated",
                      "client.deleted",
                      "file_import.finished"
                    ]
                  }
                },
                "required": [
                  "target_url",
                  "events",
                  "is_enabled"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a webhook endpoint",
        "tags": [
          "Webhooks"
        ],
        "description": "Delete a webhook endpoint.",
        "operationId": "deleteWebhookEndpoint",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Webhook endpoint id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "webhook_endpoints": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/webhook_endpoint"
        }
      },
      "webhook_endpoint": {
        "type": "object",
        "description": "Creates a webhook webdpoints allowing external backend systems to be notified wheneve the event occurs on BSPK.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the store where the appointment was created (based on associate assignment)"
          },
          "target_url": {
            "type": "string",
            "description": "Store name of where the appointment was created (based on associate assignment)"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "client.created",
              "client.updated",
              "client.deleted"
            ]
          },
          "is_enabled": {
            "type": "boolean",
            "description": "Whether or not the webhoook endpoint is enabled. If `true` events will be sent to it, otherwise it will not."
          },
          "secret": {
            "type": "string",
            "description": "(Only returned while creating the endpoint). The secret that BSPK will send (via `X-Bspk-Secret` HTTP header) on every request to this endpoint so that your bakend can validate requests."
          },
          "created_at": {
            "type": "string",
            "format": "date_time",
            "description": "Timestamp of when the webhook endpoint was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date_time",
            "description": "Timestamp of when the webhook endpoint was last updated"
          }
        },
        "required": [
          "id",
          "target_url",
          "events",
          "is_enabled",
          "created_at",
          "updated_at"
        ]
      },
      "error": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "TODO: Add business description"
                },
                "code": {
                  "type": "string"
                }
              },
              "required": [
                "title",
                "code"
              ]
            }
          }
        }
      }
    }
  }
}